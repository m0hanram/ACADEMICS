USE 19pw;
SHOW TABLES;
CREATE TABLE Customers(Custno numeric(5) PRIMARY KEY,CustName varchar(20) NOT NULL,Address1 varchar(50),Address2 varchar(50),City varchar(30),State varchar(30),PinCode varchar(10),Phone varchar(30)); 
create table Orders(OrdNo numeric(5) PRIMARY KEY,OrdDate date,ShipDate date,Custno numeric(5),Address1 varchar(50),Address2 varchar(50),City varchar(30),State varchar(30),PinCode varchar(10),Phone varchar(30),FOREIGN KEY (Custno) REFERENCES Customers(Custno), CHECK (ShipDate>=OrdDate));  
CREATE TABLE Items(Itemno numeric(5) PRIMARY KEY, ItemName varchar(20),Rate Numeric(8,2) , taxrate Numeric(4,2) DEFAULT 0,CHECK (taxrate>-1 AND Rate>-1));
CREATE TABLE Lineitems(OrdNo numeric(5),Itemno numeric (5),qty numeric(3),price numeric(8,2),DisRate numeric(4,2) DEFAULT 0, PRIMARY KEY(Ordno,Itemno),Foreign key (Itemno) REFERENCES Items(Itemno),FOREIGN KEY (OrdNo) REFERENCES Orders (OrdNo), CHECK(qty>=1 AND DisRate>=0));   

insert into items values(1,'Samsung 14" monitor',7000,10.5);
insert into items values(2,'TVS Gold Keyboard',1000,10);
insert into items values(3,'Segate HDD 20GB',6500,12.5);
insert into items values(4,'PIII processor',8000,8);
insert into items values(5,'Logitech Mouse',500,5);
insert into items values(6,'Creative MMK',4500,11.5);

insert into customers values(101,'Raul','12-22-29','Dwarakanagar','Vizag','AP','530016','453343,634333');
insert into customers values(102,'Denilson','43-22-22','CBM Compound','Vizag','AP','530012','744545');
insert into customers values(103,'Mendiator','45-45-52','Abid Nagar','Vizag','AP','530016','567434');
insert into customers values(104,'Figo','33-34-56','Muralinagar','Vizag','AP','530021','875655,876563,872222');
insert into customers values(105,'Zidane','23-22-56','LB Colony','Vizag','AP','530013','765533');

insert into orders values(1001,STR_TO_DATE('15-May-2001','%d-%b-%Y'),STR_TO_DATE('10-jun-2001','%d-%b-%Y'),102,'43-22-22','CBM Compound','Vizag','AP','530012','744545');
insert into orders values(1002,STR_TO_DATE('15-May-2001','%d-%b-%Y'),STR_TO_DATE('5-jun-2001','%d-%b-%Y'),101,'12-22-29','Dwarakanagar','Vizag','AP','530016','453343,634333');
insert into orders values(1003,STR_TO_DATE('17-May-2001','%d-%b-%Y'),STR_TO_DATE('7-jun-2001','%d-%b-%Y'),101,'12-22-29','Dwarakanagar','Vizag','AP','530016','453343,634333');
insert into orders values(1004,STR_TO_DATE('18-May-2001','%d-%b-%Y'),STR_TO_DATE('17-jun-2001','%d-%b-%Y'),103,'45-45-52','Abid Nagar', 'Vizag','AP','530016','567434');
insert into orders values(1005,STR_TO_DATE('20-May-2001','%d-%b-%Y'),STR_TO_DATE('3-jun-2001','%d-%b-%Y'),104,'33-34-56','Muralinagar','Vizag','AP','530021','875655,876563,872222');
insert into orders values(1006,STR_TO_DATE('23-May-2001','%d-%b-%Y'),STR_TO_DATE('11-jun-2001','%d-%b-%Y'),104,'54-22-12','MVP Colony','Vizag','AP','530024',null);

insert into lineitems values(1001,2,3,1000,10.0);
insert into lineitems values(1001,1,3,7000,15.0);
insert into lineitems values(1001,4,2,8000,10.0);
insert into lineitems values(1001,6,1,4500,10.0);
insert into lineitems values(1002,6,4,4500,20.0);
insert into lineitems values(1002,4,2,8000,15.0);
insert into lineitems values(1002,5,2,600,10.0);
insert into lineitems values(1003,5,10,500,0.0);
insert into lineitems values(1003,6,2,4750,5.0);
insert into lineitems values(1004,1,1,7000,10.0);
insert into lineitems values(1004,3,2,6500,10.0);
insert into lineitems values(1004,4,1,8000,20.0);
insert into lineitems values(1005,6,1,4600,10.0);
insert into lineitems values(1005,2,2,900,10.0);
insert into lineitems values(1006,2,10,950,20.0);
insert into lineitems values(1006,4,5,7800,10.0);
insert into lineitems values(1006,3,5,6600,15.0);

-- 1
-- DELIMITER //
-- CREATE PROCEDURE P1()
-- BEGIN
-- 	INSERT INTO LINEITEMS VALUE('');
-- END//
-- DELIMITER ;

-- 2
DELIMITER //
CREATE PROCEDURE P2()
BEGIN
	DECLARE CUR DECIMAL(8,2) DEFAULT 0;
    DECLARE AVEG DECIMAL(8,2) DEFAULT 0;
    SELECT AVG(PRICE) INTO AVEG FROM LINEITEMS WHERE ITEMNO = 5 GROUP BY ITEMNO ;
    SELECT RATE INTO CUR FROM ITEMS WHERE ITEMNO = 5;
    IF AVEG>CUR THEN
		UPDATE ITEMS SET RATE=AVEG WHERE ITEMNO = 5;
	END IF;
END //
DELIMITER ;    
CALL P2;

-- 3
DELIMITER //
CREATE PROCEDURE P3()
BEGIN
	DECLARE ONO DECIMAL(5,0); 
    DECLARE INO DECIMAL(5,0);
    DECLARE LRATE DECIMAL(8,2);
    DECLARE DISC DECIMAL(4,2);
	SELECT MAX(ORDNO) INTO ONO FROM ORDERS WHERE CUSTNO=102 GROUP BY CUSTNO;
    SELECT ITEMNO INTO INO FROM ITEMS WHERE ITEMNAME='PIII processor';
	SELECT MIN(PRICE) INTO LRATE FROM LINEITEMS WHERE ITEMNO=INO GROUP BY ITEMNO;
    IF (SELECT RATE FROM ITEMS WHERE ITEMNO=INO)>LRATE THEN
		SET DISC=10;
	ELSE
		SET DISC=0;
	END IF;
    INSERT INTO LINEITEMS VALUE(ONO,INO,2,LRATE,DISC);
END //
DELIMITER ;
CALL P3;

-- 4
DELIMITER //
CREATE PROCEDURE P4()
BEGIN
	DECLARE I DECIMAL(5,0) DEFAULT 1001;
	DECLARE MAXONO DECIMAL(5,0) DEFAULT 0;
    LOOP_1: LOOP
		IF (SELECT EXISTS(SELECT ORDNO FROM LINEITEMS WHERE ORDNO=I)) THEN
			SET I=I+1;
		ELSE
			IF MAXONO<I THEN
				SET MAXONO=I;
			END IF;
            SET I=I+1;
		END IF;
        IF I=1007 THEN
			LEAVE LOOP_1;
		END IF;
    END LOOP;
	IF MAXONO=0 THEN
		SELECT 'ALL THE ORDER NUMBERS ARE PRESENT';
	ELSE
		SELECT MAXONO;
	END IF;
END //
DELIMITER ;
CALL P4;

-- 5
DELIMITER //
CREATE PROCEDURE P5()
BEGIN
	DECLARE TOT DECIMAL(8,2) DEFAULT 0;
    DECLARE CNO DECIMAL(5,0) DEFAULT 101;
    DECLARE ONO DECIMAL(5,0) DEFAULT 1001;
    LOOP_1: LOOP
		IF (SELECT EXISTS(SELECT CUSTNO FROM ORDERS WHERE CUSTNO=CNO GROUP BY CUSTNO HAVING COUNT(*)>3)) THEN
			SELECT ORDNO INTO ONO FROM ORDERS WHERE CUSTNO=CNO;
			SELECT SUM(PRICE) INTO TOT FROM LINEITEMS WHERE ORDNO=ONO GROUP BY ORDNO;
		END IF;
        SET CNO=CNO+1;
        IF CNO=106 THEN
			LEAVE LOOP_1;
		END IF;
    END LOOP;
    IF TOT>10000 THEN
		SET CNO=(SELECT CUSTNO FROM ORDERS WHERE ORDNO=ONO);
		SELECT CUSTNAME FROM CUSTOMERS WHERE CUSTNO=CNO;
	else
		SELECT 'THERE IS NO CUSTOMER';
	END IF;
END //
DELIMITER ;

CALL P5;

-- 6
DELIMITER //
CREATE PROCEDURE P6()
BEGIN
	DECLARE I DECIMAL(5,0) DEFAULT 1;
    DECLARE CURPRICE DECIMAL(8,2);
    LOOP_1: LOOP
		SELECT RATE INTO CURPRICE FROM ITEMS WHERE ITEMNO=I;
		IF (SELECT EXISTS(SELECT ITEMNO FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO HAVING COUNT(*)>5)) THEN
			UPDATE ITEMS SET RATE=RATE*1.01 WHERE ITEMN0=I;
		ELSEIF (SELECT AVG(PRICE) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO)>CURPRICE THEN
			UPDATE ITEMS SET RATE=RATE*1.02 WHERE ITEMNO=I;
		ELSE
			UPDATE ITEMS SET RATE=RATE*0.97 WHERE ITEMNO=I;
		END IF;
        SET I=I+1;
        IF I=7 THEN
			LEAVE LOOP_1;
		END IF;
    END LOOP;
END //
DELIMITER ;
CALL P6;

-- 7
DELIMITER //
CREATE PROCEDURE P7()
BEGIN
	DECLARE I DECIMAL(5,0) DEFAULT 101;
    DECLARE CNAME VARCHAR(20);
    DECLARE CORDER INT DEFAULT 0;
    DECLARE ODATE DATE;
    DECLARE CAMOUNT DECIMAL(8,2) DEFAULT 0;
    CREATE TABLE CUSTSUM
    (
		CUSTOMERNO DECIMAL(5,0),
        CUSTOMERNAME VARCHAR(20),
        NOOFORDERS INT,
        RECORDERDATE DATE,
        TOTALAMOUNT DECIMAL(8,2)
    );
    L1: LOOP
		SET CNAME = (SELECT CUSTNAME FROM CUSTOMERS WHERE CUSTNO=I);
        SET CORDER = (SELECT COUNT(*) FROM ORDERS WHERE CUSTNO=I GROUP BY CUSTNO);
        SET ODATE = (SELECT MAX(ORDDATE) FROM ORDERS WHERE CUSTNO=I GROUP BY CUSTNO);
        SET CAMOUNT = (SELECT SUM(L.PRICE*L.QTY) FROM LINEITEMS L INNER JOIN ORDERS O ON L.ORDNO=O.ORDNO WHERE O.CUSTNO=I);
		INSERT INTO CUSTSUM VALUE(I,CNAME,CORDER,ODATE,CAMOUNT);
        SET I=I+1;
        IF I>106 THEN
			LEAVE L1;
		END IF;
    END LOOP;
END //
DELIMITER ;
CALL P7;

-- 8
DELIMITER //
CREATE PROCEDURE P8()
BEGIN
	DECLARE I DECIMAL(5,0) DEFAULT 1;
    DECLARE AVEG DECIMAL(8,2) DEFAULT 0;
    DECLARE CURPRICE DECIMAL(8,2) DEFAULT 0;
    DECLARE QTY DECIMAL(3,0) default 0;
    L1: LOOP
		SET AVEG = (SELECT AVG(PRICE) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO);
        SET CURPRICE = (SELECT RATE FROM ITEMS WHERE ITEMNO=I);
        SET QTY = (SELECT COUNT(*) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO);
		IF CURPRICE<AVEG OR QTY<10 THEN
			SELECT ITEMNAME FROM ITEMS WHERE ITEMNO=I;
		END IF;
        SET I=I+1;
        IF I>6 THEN
			LEAVE L1;
		END IF;
    END LOOP;
END //
DELIMITER ;
CALL P8;

-- 9
DELIMITER //
CREATE PROCEDURE P9(ONO DECIMAL(5,0) , INO DECIMAL(5,0))
BEGIN
	DECLARE IPRICE DECIMAL(8,2);
    SET IPRICE = (SELECT RATE FROM ITEMS WHERE ITEMNO=INO);
	INSERT INTO LINEITEMS VALUE(ONO,INO,1,IPRICE,10);
END //
DELIMITER ;
CALL P9(1006,1);

-- 10
DELIMITER //
CREATE FUNCTION P10() 
RETURNS DECIMAL(5,0) 
DETERMINISTIC 
BEGIN
	DECLARE I DECIMAL(5,0) DEFAULT 1001;
    LOOP_1: LOOP
		IF (SELECT EXISTS(SELECT ORDNO FROM LINEITEMS WHERE ORDNO=I)) THEN
			SET I=I+1;
		ELSE
			RETURN I;
            LEAVE LOOP_1;
		END IF;
        IF I=1007 THEN
			RETURN 0;
			LEAVE LOOP_1;
		END IF;
    END LOOP;
END //
DELIMITER ;
SELECT P10();

-- 11
DELIMITER //
CREATE FUNCTION P11(ONO DECIMAL(5,0)) 
RETURNS VARCHAR(20)
DETERMINISTIC
BEGIN
	DECLARE CNAME VARCHAR(20) DEFAULT NULL;
    SET CNAME = (SELECT CUSTNAME FROM CUSTOMERS WHERE CUSTNO = (SELECT CUSTNO FROM ORDERS WHERE ORDNO=ONO));
    RETURN CNAME;
END //
DELIMITER ;
SELECT P11(1003);

-- 12
DELIMITER //
CREATE PROCEDURE P12(INO DECIMAL(5,0),PRI DECIMAL(8,0),QUANTITY DECIMAL(3,0),DISCOUNT DECIMAL(4,2))
BEGIN
	DECLARE ONO DECIMAL(5,0);
    DECLARE CURPRICE DECIMAL(8,2);
    DECLARE TOT DECIMAL(8,2);
    SET TOT = (SELECT SUM(PRICE*QTY) FROM LINEITEMS WHERE ITEMNO=INO GROUP BY ITEMNO);
    SET ONO = (SELECT MAX(ORDNO) FROM ORDERS);
    SET CURPRICE = (SELECT RATE FROM ITEMS WHERE ITEMNO=INO);
    IF (PRI>CURPRICE) AND (SELECT EXISTS(SELECT INO FROM LINEITEMS WHERE ITEMNO=INO)) AND (TOT+(PRI*QUANTITY)>50000) THEN
		INSERT INTO LINEITEMS VALUE(ONO,INO,QUANTITY,PRI,DISCOUNT);
	END IF;
END //
DELIMITER  ;
CALL P12(6,9000,4,10);

-- 13
DELIMITER //
CREATE TRIGGER P13
BEFORE INSERT
ON LINEITEMS FOR EACH ROW
BEGIN
	DECLARE ERRORMSG VARCHAR(100);
    SET ERRORMSG='THERE CANNOT ME MORE THAN 5 NUMBER OF SAME ITEM';
	IF (SELECT EXISTS(SELECT ITEMNO FROM LINEITEMS WHERE ITEMNO=NEW.ITEMNO GROUP BY ITEMNO HAVING COUNT(*)>5)) THEN
		SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = ERRORMSG;
	END IF;
END //
DELIMITER ;

-- 14
DELIMITER //
CREATE TRIGGER P14
BEFORE UPDATE 
ON ITEMS FOR EACH ROW
BEGIN
	DECLARE ERRORMSG VARCHAR(100);
    SET ERRORMSG='NO CHANGES ALLOWED BETWEEN 9PM TO 9 AM';
	IF (SELECT 1 WHERE CURRENT_TIME BETWEEN '21:00:00' AND '09:00:00') THEN
		SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = ERRORMSG;
    END IF;
END //
DELIMITER ;

-- 15
DELIMITER //
CREATE TRIGGER P15
AFTER UPDATE 
ON ITEMS FOR EACH ROW
BEGIN
	DECLARE ERRORMSG VARCHAR(100);
	SET ERRORMSG='YOU CANT CHANGE THE PRICE MORE THEN 25%';
    IF (ABS(OLD.RATE-NEW.RATE)>0.25*OLD.RATE) THEN
		SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = ERRORMSG;
	END IF;
END //
DELIMITER ;

-- 16 
DELIMITER //
CREATE PROCEDURE P16()
BEGIN
	DECLARE ONO DECIMAL(5,0);
    DECLARE ODATE DATE;
    DECLARE CNO DECIMAL(5,0);
    DECLARE SDATE DATE;
    DECLARE SADD1 VARCHAR(50);
    DECLARE SADD2 VARCHAR(50);
    DECLARE SCITY VARCHAR(30);
    DECLARE SSTATE VARCHAR(30);
    DECLARE SPINCODE VARCHAR(10);
    DECLARE SPHONE VARCHAR(30);
    SET ONO = (SELECT MAX(ORDNO) FROM ORDERS)+1;
    SET ODATE = (SELECT CURDATE()-1);
    SET CNO = 103;
    SET SDATE = (SELECT ADDDATE(ODATE,INTERVAL 15 DAY));
    SET SADD1 = (SELECT ADDRESS1 FROM CUSTOMERS WHERE CUSTNO=CNO);
	SET SADD2 = (SELECT ADDRESS2 FROM CUSTOMERS WHERE CUSTNO=CNO);
    SET SCITY = (SELECT CITY FROM CUSTOMERS WHERE CUSTNO=CNO);
	SET SSTATE = (SELECT STATE FROM CUSTOMERS WHERE CUSTNO=CNO);
	SET SPINCODE = (SELECT PINCODE FROM CUSTOMERS WHERE CUSTNO=CNO);
	SET SPHONE = (SELECT PHONE FROM CUSTOMERS WHERE CUSTNO=CNO);
    INSERT INTO ORDERS VALUE(ONO,ODATE,SDATE,CNO,SADD1,SADD2,SCITY,SSTATE,SPINCODE,SPHONE);
END //
DELIMITER ;
CALL P16;

-- 16 CONTINIUE
DELIMITER //
CREATE PROCEDURE P17()
BEGIN
	DECLARE LRATE DECIMAL(8,2);
    DECLARE ONO DECIMAL(5,0);
    SET LRATE = (SELECT MIN(PRICE) FROM LINEITEMS WHERE ITEMNO=4 GROUP BY ITEMNO);
    SET ONO = (SELECT ORDNO FROM LINEITEMS HAVING MIN(PRICE));
    INSERT INTO LINEITEMS VALUE(ONO,4,2,LRATE,0);
END //
DELIMITER ;
CALL P17;

-- 17
DELIMITER //
CREATE PROCEDURE P18()
BEGIN 
	DECLARE I DECIMAL(5,0) DEFAULT 1;
    DECLARE INAME VARCHAR(20);
    DECLARE UNITS INT;
    L1: LOOP
		SET INAME = (SELECT ITEMNAME FROM ITEMS WHERE ITEMNO=I);
        SET UNITS = (SELECT SUM(QTY) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO);
        SELECT INAME,UNITS;
        SET I=I+1;
        IF I>6 THEN
			LEAVE L1;
		END IF;
    END LOOP;
END //
DELIMITER ;
CALL P18;

-- 18
DELIMITER //
CREATE PROCEDURE P19()
BEGIN
	DECLARE CURPRICE DECIMAL(8,2);
    SET CURPRICE = (SELECT RATE FROM ITEMS WHERE ITEMNO=4);
    INSERT INTO LINEITEMS VALUE(1003,4,1,CURPRICE,5);
END //
DELIMITER ;
CALL P19;

-- 19
DELIMITER //
CREATE PROCEDURE P20()
BEGIN
	DECLARE TOT DECIMAL(5,0);
    DECLARE ODATE DATE;
    DECLARE ERRORMSG VARCHAR(100); 
    SET ERRORMSG='NOT POSSIBLE';
    SET ODATE = (SELECT ORDDATE FROM ORDERS WHERE ORDNO=1003);
    SET TOT = (SELECT SUM(PRICE*QTY) FROM LINEITEMS WHERE ORDNO=1003 GROUP BY ORDNO);
	IF NOT (SELECT EXISTS(SELECT ITEMNO FROM LINEITEMS)) AND (TOT>30000) AND (ODATE=(SELECT SUBDATE(CURDATE(),INTERVAL 4 DAY))) THEN
			SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = ERRORMSG;
	END IF;
END //
DELIMITER ;
CALL P20;

-- 20
DELIMITER //
CREATE PROCEDURE P21()
BEGIN
	DECLARE NOOFORDER INT DEFAULT 0;
    SET NOOFORDER = (SELECT COUNT(*) FROM ORDERS WHERE CUSTNO IN (101,102,103,104,105));
	SELECT NOOFORDER;
END //
DELIMITER ;
CALL P21;

-- 21
DELIMITER //
CREATE PROCEDURE P22()
BEGIN
	DECLARE NOOFORDER INT;
	DECLARE NOOFUNITS INT;
    DECLARE CURPRICE DECIMAL(8,2);
    DECLARE APRICE DECIMAL(8,2);
    DECLARE I DECIMAL(5,0) DEFAULT 1;
    L1: LOOP
		SET NOOFORDER = (SELECT COUNT(*) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO);
        SET NOOFUNITS = (SELECT SUM(QTY) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO);
        SET CURPRICE = (SELECT RATE FROM ITEMS WHERE ITEMNO=I);
        SET APRICE = (SELECT AVG(PRICE) FROM LINEITEMS WHERE ITEMNO=I GROUP BY ITEMNO);
        IF NOOFORDER>5 OR NOOFUNITS>25 THEN
			UPDATE ITEMS SET RATE = RATE*1.01 WHERE ITEMNO=I;
		END IF;
        IF CURPRICE<APRICE THEN
			UPDATE ITEMS SET RATE = RATE*1.005 WHERE ITEMNO=I;
		END IF;
        SET I=I+1;
        IF I>6 THEN
			LEAVE L1;
		END IF;
    END LOOP;
END //
DELIMITER ;
CALL P22;

-- 22
DELIMITER //
CREATE TRIGGER P23
BEFORE UPDATE
ON LINEITEMS FOR EACH ROW
BEGIN
	DECLARE ERRORMSG VARCHAR(100);
    SET ERRORMSG='NOT PERMITTED TO INC PRICE';
	IF NEW.PRICE-OLD.PRICE>0 THEN
		SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = ERRORMSG;
	END IF;
END //
DELIMITER ;

-- 23
DELIMITER //
CREATE TRIGGER P24
BEFORE UPDATE 
ON ORDERS FOR EACH ROW
BEGIN
	DECLARE ERRORMSG VARCHAR(100);
    SET ERRORMSG='NO CHANGES ALLOWED BETWEEN 9PM TO 9 AM';
	IF (SELECT 1 WHERE CURRENT_TIME BETWEEN '21:00:00' AND '09:00:00') THEN
		SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = ERRORMSG;
    END IF;
END //
DELIMITER ;


-- 24
DELIMITER //
CREATE FUNCTION P25(ONO DECIMAL(5,0))
RETURNS DECIMAL(5,0)
DETERMINISTIC
BEGIN
	IF (SELECT EXISTS(SELECT ORDNO FROM ORDERS WHERE ORDNO=ONO+1)) THEN
		RETURN ONO+1;
	ELSE
		RETURN NULL;
	END IF;
END //
DELIMITER ;
SELECT P25(1007);

-- 25
DELIMITER //
CREATE FUNCTION P26() 
RETURNS DECIMAL(5,0) 
DETERMINISTIC 
BEGIN
	DECLARE I DECIMAL(5,0) DEFAULT 1001;
    LOOP_1: LOOP
		IF (SELECT EXISTS(SELECT ORDNO FROM LINEITEMS WHERE ORDNO=I)) THEN
			SET I=I+1;
		ELSE
			RETURN I;
            LEAVE LOOP_1;
		END IF;
        IF I=1007 THEN
			RETURN 0;
			LEAVE LOOP_1;
		END IF;
    END LOOP;
END //
DELIMITER ;
SELECT P26();
